@model Asdep.Common.DAO.SoggettiImportAppoggioDao

@{
    ViewBag.Title = "EditSoggettoImportato";
    Session["page"] = Request.QueryString["page"] != null ? Request.QueryString["page"].ToString() : "0";
    Session["ente"] = Model.Ente;
    Session["tracciato"] = Model.TipoTracciato;
}

@*<h2>EditSoggettoImportato</h2>*@

@using (Html.BeginForm("Modifica", "GestioneAnagrafica", FormMethod.Post, new { page = Session["page"].ToString() }))
{
    @Html.ValidationSummary(true)
    
    <!--form edit 1-->

   @Html.HiddenFor(t=> t.IdSoggetto)
     @Html.HiddenFor(t=> t.TipoTracciato)

    <div class="Form Form--spaced u-layout-r-withGutter u-padding-top-xxl u-text-r-xs">
        <fieldset class="Form-fieldset">
            <legend class="Form-legend color-primo">Scheda posizione assicurativa: @Model.Cognome @Model.Nome</legend>

            <section class="Grid Grid--withGutter">
<!-- Ente-->
                <div class="Grid-cell u-md-size1of4 u-lg-size1of4 u-margin-top-l">
                    <div class="Form-field">
                        <label class="Form-label is-required" for="ente">Ente</label>
                        @{ string descrErroreEnte = Model.ErroriList.Where(x => x.NomeColonna.Equals("Ente")).FirstOrDefault() != null ? Model.ErroriList.Where(x => x.NomeColonna.Equals("Ente")).FirstOrDefault().DescErrore : null;
                           if (!string.IsNullOrEmpty(descrErroreEnte))
                           {
                            <input class="Form-input u-text-r-s u-borderRadius-m border-color-red" id="Ente" aria-required="true" required name="Ente" value="@Model.Ente">
                            <span class="u-color-red">@descrErroreEnte</span>
                           }
                           else
                           {
                            <input class="Form-input u-text-r-s u-borderRadius-m" id="Ente" aria-required="true" required name="Ente" value="@Model.Ente">
                           }}
                    </div>
                </div>
<!-- Codice Fiscale Assicurato-->
                <div class="Grid-cell u-md-size1of4 u-lg-size1of4 u-margin-top-l">
                    <div class="Form-field">
                        <label class="Form-label is-required" for="CodiceFiscaleAssicurato">Codice fiscale</label>
                        @{ string descrErroreCodiceFiscaleAssicurato = Model.ErroriList.Where(x => x.NomeColonna.Equals("CodiceFiscaleAssicurato")).FirstOrDefault() != null ? Model.ErroriList.Where(x => x.NomeColonna.Equals("CodiceFiscaleAssicurato")).FirstOrDefault().DescErrore : null;
                           if (!string.IsNullOrEmpty(descrErroreCodiceFiscaleAssicurato))
                           {
                            <input class="Form-input u-text-r-s u-borderRadius-m border-color-red" id="CodiceFiscaleAssicurato" aria-required="true" required name="CodiceFiscaleAssicurato" value="@Model.CodiceFiscaleAssicurato">
                            <span class="u-color-red">@descrErroreCodiceFiscaleAssicurato</span>  
                           }
                           else
                           {
                            <input class="Form-input u-text-r-s u-borderRadius-m" id="CodiceFiscaleAssicurato" aria-required="true" required name="CodiceFiscaleAssicurato" value="@Model.CodiceFiscaleAssicurato">
                           }}
                    </div>
                </div>

                <div class="Grid-cell u-md-size1of4 u-lg-size1of4 u-margin-top-l ">
                    <div class="Form-field">
                        <label class="Form-label is-required" for="Cognome">Cognome</label>
                        @{ string descrErroreCognome = Model.ErroriList.Where(x => x.NomeColonna.Equals("Cognome")).FirstOrDefault() != null ? Model.ErroriList.Where(x => x.NomeColonna.Equals("Cognome")).FirstOrDefault().DescErrore : null;
                           if (!string.IsNullOrEmpty(descrErroreCognome))
                           {
                            <input class="Form-input u-text-r-s u-borderRadius-m border-color-red" id="Cognome" aria-required="true" required name="Cognome" value="@Model.Cognome">
                            <span class="u-color-red">@descrErroreCognome</span>
                           }
                           else
                           {
                            <input class="Form-input u-text-r-s u-borderRadius-m" id="Cognome" aria-required="true" required name="Cognome" value="@Model.Cognome">
                           }
                        }
                    </div>
                </div>
                <div class="Grid-cell u-md-size1of4 u-lg-size1of4 u-margin-top-l ">
                    <div class="Form-field">
                        <label class="Form-label is-required" for="Nome">Nome</label>
                        @{ string descrErroreNome = Model.ErroriList.Where(x => x.NomeColonna.Equals("Nome")).FirstOrDefault() != null ? Model.ErroriList.Where(x => x.NomeColonna.Equals("Nome")).FirstOrDefault().DescErrore : null;
                           if (!string.IsNullOrEmpty(descrErroreNome))
                           {
                            <input class="Form-input u-text-r-s u-borderRadius-m border-color-red" id="Nome" aria-required="true" required name="Nome" value="@Model.Nome">
                            <span class="u-color-red">@descrErroreNome</span>
                           }
                           else
                           {
                            <input class="Form-input u-text-r-s u-borderRadius-m" id="Nome" aria-required="true" required name="Nome" value="@Model.Nome">
                           }}
                    </div>
                </div>
                
                <div class="Grid-cell u-md-size1of4 u-lg-size1of4">

                    <div class="Form-field">
                        <label class="Form-label" for="SecondoNome">Secondo nome</label>
                        @{ string descrSecondoNome = Model.ErroriList.Where(x => x.NomeColonna.Equals("SecondoNome")).FirstOrDefault() != null ? Model.ErroriList.Where(x => x.NomeColonna.Equals("SecondoNome")).FirstOrDefault().DescErrore : null;
                           if (!string.IsNullOrEmpty(descrSecondoNome))
                           {
                            <input class="Form-input u-text-r-s u-borderRadius-m border-color-red" id="SecondoNome" name="SecondoNome" value="@Model.SecondoNome">
                            <span class="u-color-red">@descrSecondoNome</span>  
                           }
                           else
                           {
                            <input class="Form-input u-text-r-s u-borderRadius-m" id="SecondoNome" name="SecondoNome" value="@Model.SecondoNome">
                           }}
                    </div>
                </div>

                <div class="Grid-cell u-md-size1of4 u-lg-size1of4">
                    <div class="Form-field">
                        <label class="Form-label" for="LuogoNascitaAssicurato">Luogo di nascita</label>
                        @{ string descrLuogoNascitaAssicurato = Model.ErroriList.Where(x => x.NomeColonna.Equals("LuogoNascitaAssicurato")).FirstOrDefault() != null ? Model.ErroriList.Where(x => x.NomeColonna.Equals("LuogoNascitaAssicurato")).FirstOrDefault().DescErrore : null;
                           if (!string.IsNullOrEmpty(descrLuogoNascitaAssicurato))
                           {
                            <input class="Form-input u-text-r-s u-borderRadius-m border-color-red" id="LuogoNascitaAssicurato"  name="LuogoNascitaAssicurato" value="@Model.LuogoNascitaAssicurato">
                            <span class="u-color-red">@descrLuogoNascitaAssicurato</span>  
                           }
                           else
                           { 
                            <input class="Form-input u-text-r-s u-borderRadius-m" id="LuogoNascitaAssicurato" name="LuogoNascitaAssicurato" value="@Model.LuogoNascitaAssicurato">
                           }}
                    </div>
                </div>
                <div class="Grid-cell u-md-size1of4 u-lg-size1of4">

                    <div class="Form-field">
                        <label class="Form-label" for="DataNascitaAssicurato">Data di nascita</label>
                        @{ string descrDataNascitaAssicurato = Model.ErroriList.Where(x => x.NomeColonna.Equals("DataNascitaAssicurato")).FirstOrDefault() != null ? Model.ErroriList.Where(x => x.NomeColonna.Equals("DataNascitaAssicurato")).FirstOrDefault().DescErrore : null;
                           if (!string.IsNullOrEmpty(descrDataNascitaAssicurato))
                           {
                            <input type="date" class="Form-input u-text-r-s u-borderRadius-m border-color-red" id="DataNascitaAssicurato"  name="DataNascitaAssicurato" value='@if(Model.DataNascitaAssicurato.HasValue){ @Model.DataNascitaAssicurato.Value.ToString("yyyy-MM-dd")}'>
                            <span class="u-color-red">@descrDataNascitaAssicurato</span>  
                           }
                           else
                           {  
                            <input type="date" class="Form-input u-text-r-s u-borderRadius-m" id="DataNascitaAssicurato"  name="DataNascitaAssicurato" value='@if(Model.DataNascitaAssicurato.HasValue){ @Model.DataNascitaAssicurato.Value.ToString("yyyy-MM-dd")}'>
                           }}
                    </div>
                </div>
                
                <div class="Grid-cell u-md-size1of4 u-lg-size1of4">
                    <div class="Form-field">
                        <label class="Form-label is-required" for="CodiceFiscaleCapoNucleo">C.F. capo nucleo</label>
                        @{ string descrCodiceFiscaleCapoNucleo = Model.ErroriList.Where(x => x.NomeColonna.Equals("CodiceFiscaleCapoNucleo")).FirstOrDefault() != null ? Model.ErroriList.Where(x => x.NomeColonna.Equals("CodiceFiscaleCapoNucleo")).FirstOrDefault().DescErrore : null;
                           if (!string.IsNullOrEmpty(descrCodiceFiscaleCapoNucleo))
                           {
                            <input class="Form-input u-text-r-s u-borderRadius-m border-color-red" id="CodiceFiscaleCapoNucleo" aria-required="true" required name="CodiceFiscaleCapoNucleo"  value="@Model.CodiceFiscaleCapoNucleo">
                            <span class="u-color-red">@descrCodiceFiscaleCapoNucleo</span>  
                           }
                           else
                           {
                            <input class="Form-input u-text-r-s u-borderRadius-m" id="CodiceFiscaleCapoNucleo" aria-required="true" required name="CodiceFiscaleCapoNucleo"  value="@Model.CodiceFiscaleCapoNucleo">  
                           }}
                    </div>
                </div>
                <div class="Grid-cell u-md-size1of4 u-lg-size1of4">

                    <div class="Form-field">
                        <label class="Form-label is-required" for="LegameNucleo">Descrizione legame</label>
                        @{ string descrLegameNucleo = Model.ErroriList.Where(x => x.NomeColonna.Equals("LegameNucleo")).FirstOrDefault() != null ? Model.ErroriList.Where(x => x.NomeColonna.Equals("LegameNucleo")).FirstOrDefault().DescErrore : null;
                           if (!string.IsNullOrEmpty(descrLegameNucleo))
                           {
                            @*<input class="Form-input u-text-r-s u-borderRadius-m border-color-red" id="LegameNucleo" aria-required="true" name="LegameNucleo" required value="@Model.LegameNucleo">*@
                            @Html.DropDownListFor(m => m.LegameNucleo, new SelectList(ViewBag.TipiLegamiList, "Value", "Text",  Model.LegameNucleo), new { @class = "Form-input u-text-r-s u-borderRadius-m border-color-red" })
                            <span class="u-color-red">@descrLegameNucleo</span>  
                           }
                           else
                           {
                            @Html.DropDownListFor(m => m.LegameNucleo, new SelectList(ViewBag.TipiLegamiList, "Value", "Text", Model.LegameNucleo), new { @class = "Form-input u-text-r-s u-borderRadius-m" })
                               @*<input class="Form-input u-text-r-s u-borderRadius-m" id="LegameNucleo" aria-required="true" name="LegameNucleo" required value="@Model.LegameNucleo">*@
                           }}
                    </div>
                </div>
                
                
                
            </section>
        </fieldset>
    </div>

    <!--form edit 2-->
        


    <div class="Form Form--spaced u-layout-r-withGutter u-padding-top-xxl u-text-r-xs">
        <fieldset class="Form-fieldset">
            <legend class="Form-legend color-primo">Riferimenti assicurato</legend>

            <section class="Grid Grid--withGutter">
                <div class="Grid-cell u-md-size1of4 u-lg-size1of4 u-margin-top-l ">

                    <div class="Form-field">
                        <label class="Form-label" for="IndirizzoResidenza">Residenza</label>
                        @{ string descrIndirizzoResidenza = Model.ErroriList.Where(x => x.NomeColonna.Equals("IndirizzoResidenza")).FirstOrDefault() != null ? Model.ErroriList.Where(x => x.NomeColonna.Equals("IndirizzoResidenza")).FirstOrDefault().DescErrore : null;
                           if (!string.IsNullOrEmpty(descrLuogoNascitaAssicurato))
                           {
                            <input class="Form-input u-text-r-s u-borderRadius-m border-color-red" id="IndirizzoResidenza" name="IndirizzoResidenza" value="@Model.IndirizzoResidenza">
                            <span class="u-color-red">@descrIndirizzoResidenza</span>  
                           }
                           else
                           { 
                            <input class="Form-input u-text-r-s u-borderRadius-m" id="IndirizzoResidenza" name="IndirizzoResidenza"  value="@Model.IndirizzoResidenza">
                           }
                        }
                    </div>

                </div>
                <div class="Grid-cell u-md-size1of4 u-lg-size1of4 u-margin-top-l">

                    <div class="Form-field">
                        <label class="Form-label" for="LocalitaResidenza">Località Residenza</label>
                        @{ string descrLocalitaResidenza = Model.ErroriList.Where(x => x.NomeColonna.Equals("LocalitaResidenza")).FirstOrDefault() != null ? Model.ErroriList.Where(x => x.NomeColonna.Equals("LocalitaResidenza")).FirstOrDefault().DescErrore : null;
                           if (!string.IsNullOrEmpty(descrLocalitaResidenza))
                           {
                            <input class="Form-input u-text-r-s u-borderRadius-m border-color-red" id="LocalitaResidenza"  name="LocalitaResidenza" value="@Model.LocalitaResidenza">
                            <span class="u-color-red">@descrLocalitaResidenza</span>  
                           }
                           else
                           {
                            <input class="Form-input u-text-r-s u-borderRadius-m" id="LocalitaResidenza"   name="LocalitaResidenza" value="@Model.LocalitaResidenza">
                           }
                        }
                    </div>
                </div>

                <div class="Grid-cell u-md-size1of4 u-lg-size1of4 u-margin-top-l">
                    <div class="Form-field">
                        <label class="Form-label is-required" for="SiglaProvResidenza">Provincia</label>
                        @{ string descrSiglaProvResidenza = Model.ErroriList.Where(x => x.NomeColonna.Equals("SiglaProvResidenza")).FirstOrDefault() != null ? Model.ErroriList.Where(x => x.NomeColonna.Equals("SiglaProvResidenza")).FirstOrDefault().DescErrore : null;
                           if (!string.IsNullOrEmpty(descrSiglaProvResidenza))
                           {
                            <input class="Form-input u-text-r-s u-borderRadius-m border-color-red" id="SiglaProvResidenza" aria-required="true" name="SiglaProvResidenza" required value="@Model.SiglaProvResidenza">
                            <span class="u-color-red">@descrSiglaProvResidenza</span>  
                           }
                           else
                           {
                            <input class="Form-input u-text-r-s u-borderRadius-m" id="SiglaProvResidenza" aria-required="true" name="SiglaProvResidenza" required value="@Model.SiglaProvResidenza">
                           }
                        }
                    </div>
</div>
                <div class="Grid-cell u-md-size1of4 u-lg-size1of4 u-margin-top-l">
                    <div class="Form-field">
                        <label class="Form-label" for="CapResidenza">Cap</label>
                        @{ string descrCapResidenza = Model.ErroriList.Where(x => x.NomeColonna.Equals("CapResidenza")).FirstOrDefault() != null ? Model.ErroriList.Where(x => x.NomeColonna.Equals("CapResidenza")).FirstOrDefault().DescErrore : null;
                           if (!string.IsNullOrEmpty(descrCapResidenza))
                           {
                            <input class="Form-input u-text-r-s u-borderRadius-m border-color-red" id="CapResidenza"  name="CapResidenza" value="@Model.CapResidenza">
                            <span class="u-color-red">@descrCapResidenza</span>  
                           }
                           else
                           {
                            <input class="Form-input u-text-r-s u-borderRadius-m" id="CapResidenza"  name="CapResidenza" value="@Model.CapResidenza">
                           }
                        }
                    </div>
                </div>
                
                <div class="Grid-cell u-md-size1of4 u-lg-size1of4">

                    <div class="Form-field">
                        <label class="Form-label" for="Iban">Iban</label>
                        @{ string descrIban = Model.ErroriList.Where(x => x.NomeColonna.Equals("Iban")).FirstOrDefault() != null ? Model.ErroriList.Where(x => x.NomeColonna.Equals("Iban")).FirstOrDefault().DescErrore : null;
                           if (!string.IsNullOrEmpty(descrIban))
                           {
                            <input class="Form-input u-text-r-s u-borderRadius-m border-color-red" id="Iban"  name="Iban"  value="@Model.Iban">
                            <span class="u-color-red">@descrIban</span>  
                           }
                           else
                           {
                            <input class="Form-input u-text-r-s u-borderRadius-m" id="Iban" name="Iban" value="@Model.Iban">
                           }
                        }
                    </div>
                    </div>

                <div class="Grid-cell u-md-size1of4 u-lg-size1of4">
                    <div class="Form-field">
                        <label class="Form-label" for="Email">Email</label>
                        @{ string descrEmail = Model.ErroriList.Where(x => x.NomeColonna.Equals("Email")).FirstOrDefault() != null ? Model.ErroriList.Where(x => x.NomeColonna.Equals("Email")).FirstOrDefault().DescErrore : null;
                           if (!string.IsNullOrEmpty(descrEmail))
                           {
                            <input class="Form-input u-text-r-s u-borderRadius-m border-color-red" id="Email" name="Email" value="@Model.Email">
                            <span class="u-color-red">@descrEmail</span>  
                           }
                           else
                           {
                            <input class="Form-input u-text-r-s u-borderRadius-m" id="Email" name="Email" value="@Model.Email">
                           }
                        }
                    </div>

                </div>
                <div class="Grid-cell u-md-size1of4 u-lg-size1of4">

                    <div class="Form-field">
                        <label class="Form-label" for="Telefono">Telefono</label>
                        @{ string descrTelefono = Model.ErroriList.Where(x => x.NomeColonna.Equals("Telefono")).FirstOrDefault() != null ? Model.ErroriList.Where(x => x.NomeColonna.Equals("Telefono")).FirstOrDefault().DescErrore : null;
                           if (!string.IsNullOrEmpty(descrTelefono))
                           {
                            <input class="Form-input u-text-r-s u-borderRadius-m border-color-red" id="Telefono" name="Telefono" value="@Model.Telefono">
                            <span class="u-color-red">@descrTelefono</span>  
                           }
                           else
                           {
                            <input class="Form-input u-text-r-s u-borderRadius-m" id="Telefono" name="Telefono" value="@Model.Telefono">
                           }
                        }
                    </div>
                </div>

                
            </section>

        </fieldset>
    </div>

    <!--form edit 3-->

    <div class="Form Form--spaced u-layout-r-withGutter u-padding-top-xxl u-text-r-xs">
        <fieldset class="Form-fieldset">
            <legend class="Form-legend color-primo">Dati lavorazione polizza</legend>

            <section class="Grid Grid--withGutter">
                <div class="Grid-cell u-md-size1of4 u-lg-size1of4 u-margin-top-l ">
                    <div class="Form-field">
                        <label class="Form-label is-required" for="Effetto">Data effetto</label>
                        @{ string descrEffetto = Model.ErroriList.Where(x => x.NomeColonna.Equals("Effetto")).FirstOrDefault() != null ? Model.ErroriList.Where(x => x.NomeColonna.Equals("Effetto")).FirstOrDefault().DescErrore : null;
                           if (!string.IsNullOrEmpty(descrEffetto))
                           {
                            <input type="date" class="Form-input u-text-r-s u-borderRadius-m border-color-red" id="Effetto" aria-required="true" required name="Effetto" value="@Model.Effetto.ToString("yyyy-MM-dd")">
                            <span class="u-color-red">@descrEffetto</span>  
                           }
                           else
                           {
                            <input type="date" class="Form-input u-text-r-s u-borderRadius-m" id="Effetto" aria-required="true" required name="Effetto" value="@Model.Effetto.ToString("yyyy-MM-dd")">
                           }
                        }
                    </div>
                </div>

                 <div class="Grid-cell u-md-size1of4 u-lg-size1of4 u-margin-top-l ">
                    <div class="Form-field">
                        <label class="Form-label" for="DataCessazione">Data cessazione</label>
                        @{ string descrDataCessazione = Model.ErroriList.Where(x => x.NomeColonna.Equals("DataCessazione")).FirstOrDefault() != null ? Model.ErroriList.Where(x => x.NomeColonna.Equals("DataCessazione")).FirstOrDefault().DescErrore : null;
                           if (!string.IsNullOrEmpty(descrDataCessazione))
                           {
                            <input type="date" class="Form-input u-text-r-s u-borderRadius-m border-color-red" id="DataCessazione" name="DataCessazione" value="@if (Model.DataCessazione.HasValue) { @Model.DataCessazione.Value.ToString("yyyy-MM-dd") }">
                            <span class="u-color-red">@descrDataCessazione</span>  
                           }
                           else
                           {
                            <input type="date" class="Form-input u-text-r-s u-borderRadius-m" id="DataCessazione" name="DataCessazione" value="@if (Model.DataCessazione.HasValue) { @Model.DataCessazione.Value.ToString("yyyy-MM-dd") }">
                           }
                        }
                    </div>
                </div>

                <div class="Grid-cell u-md-size1of4 u-lg-size1of4 u-margin-top-l ">
                    <div class="Form-field">
                        <label class="Form-label is-required" for="Convenzione">Convenzione</label>
                        @{ string descrConvenzione = Model.ErroriList.Where(x => x.NomeColonna.Equals("Convenzione")).FirstOrDefault() != null ? Model.ErroriList.Where(x => x.NomeColonna.Equals("Convenzione")).FirstOrDefault().DescErrore : null;
                           if (!string.IsNullOrEmpty(descrConvenzione))
                           {
                            <input class="Form-input u-text-r-s u-borderRadius-m border-color-red" id="Convenzione" aria-required="true" required name="Convenzione" value="@Model.Convenzione">
                            <span class="u-color-red">@descrConvenzione</span>  
                           }
                           else
                           {
                            <input class="Form-input u-text-r-s u-borderRadius-m" id="Convenzione" aria-required="true" required name="Convenzione" value="@Model.Convenzione">
                           }
                        }
                    </div>
                </div>

                <div class="Grid-cell u-md-size1of4 u-lg-size1of4 u-margin-top-l ">
                    <div class="Form-field">
                        <label class="Form-label is-required" for="Categoria">Categoria</label>
                        @{ string descrCategoria = Model.ErroriList.Where(x => x.NomeColonna.Equals("Categoria")).FirstOrDefault() != null ? Model.ErroriList.Where(x => x.NomeColonna.Equals("Categoria")).FirstOrDefault().DescErrore : null;
                           if (!string.IsNullOrEmpty(descrCategoria))
                           {
                                @Html.DropDownListFor(m => m.Categoria, new SelectList(ViewBag.TipiSoggList, "Value", "Text", Model.Categoria), new { @class = "Form-input u-text-r-s u-borderRadius-m border-color-red" })
                                @*<input class="Form-input u-text-r-s u-borderRadius-m border-color-red" id="Categoria" aria-required="true" required name="Categoria" value="@Model.Categoria">*@
                            <span class="u-color-red">@descrCategoria</span>  
                           }
                           else
                           {
                               @Html.DropDownListFor(m => m.Categoria, new SelectList(ViewBag.TipiSoggList, "Value", "Text", Model.Categoria), new { @class = "Form-input u-text-r-s u-borderRadius-m" })
                            @*<input class="Form-input u-text-r-s u-borderRadius-m" id="Categoria" aria-required="true" required name="Categoria" value="@Model.Categoria">*@
                           }
                        }
                    </div>
                </div>

                <div class="Grid-cell u-md-size1of4 u-lg-size1of4">
                    <div class="Form-field">
                        <label class="Form-label is-required" for="EsclusioniPregresse">Esclusioni pregresse</label>
                        @{ string descrEsclusioniPregresse = Model.ErroriList.Where(x => x.NomeColonna.Equals("EsclusioniPregresse")).FirstOrDefault() != null ? Model.ErroriList.Where(x => x.NomeColonna.Equals("EsclusioniPregresse")).FirstOrDefault().DescErrore : null;
                           if (!string.IsNullOrEmpty(descrEsclusioniPregresse))
                           {
                            <input class="Form-input u-text-r-s u-borderRadius-m border-color-red" id="EsclusioniPregresse" aria-required="true" required name="EsclusioniPregresse" value="@Model.EsclusioniPregresse">
                            <span class="u-color-red">@descrEsclusioniPregresse</span>  
                           }
                           else
                           {
                            <input class="Form-input u-text-r-s u-borderRadius-m" id="EsclusioniPregresse" aria-required="true" required name="EsclusioniPregresse" value="@Model.EsclusioniPregresse">
                           }
                        }
                    </div>
                </div>

                <div class="Grid-cell u-md-size1of4 u-lg-size1of4">
                    <div class="Form-field">
                        <label class="Form-label is-required" for="NumeroPolizza">Polizza</label>
                        @{ string descrNumeroPolizza = Model.ErroriList.Where(x => x.NomeColonna.Equals("NumeroPolizza")).FirstOrDefault() != null ? Model.ErroriList.Where(x => x.NomeColonna.Equals("NumeroPolizza")).FirstOrDefault().DescErrore : null;
                           if (!string.IsNullOrEmpty(descrNumeroPolizza))
                           {
                            @Html.DropDownListFor(m => m.NumeroPolizza, new SelectList(ViewBag.TipiAdesList, "Value", "Text", Model.NumeroPolizza), new { @class = "Form-input u-text-r-s u-borderRadius-m border-color-red" })
                               @*<input class="Form-input u-text-r-s u-borderRadius-m border-color-red" id="NumeroPolizza" aria-required="true" required name="NumeroPolizza" value="@Model.NumeroPolizza">*@
                            <span class="u-color-red">@descrNumeroPolizza</span>  
                           }
                           else
                           {
                            @Html.DropDownListFor(m => m.NumeroPolizza, new SelectList(ViewBag.TipiAdesList, "Value", "Text", Model.NumeroPolizza), new { @class = "Form-input u-text-r-s u-borderRadius-m" })   
                            @*<input class="Form-input u-text-r-s u-borderRadius-m" id="NumeroPolizza" aria-required="true" required name="NumeroPolizza" value="@Model.NumeroPolizza">*@
                           }
                        }
                    </div>
                </div>
            </section>
        </fieldset>

        <div class="Form-field Grid-cell u-textRight">
            @*<button type="button" class="Button Button--default Button--shadow u-text-m u-margin-all-xs">AZZERA</button>*@
            <input type="submit" class="Button Button--default Button--shadow u-text-m u-margin-all-xs" value="Valida modifica" />
        </div>
    </div>
    <!--fine form ricerca-->
}

<div>
    @Html.ActionLink("TORNA ALLA LISTA", "Back", null, new { @class = "Button Button--default Button--shadow u-text-m u-margin-all-xs" })
</div>

